import { app, BrowserWindow, screen } from 'electron';
import { setupServer } from './server';
import { setIsInstalledAndRunning } from './firebase';
import { setupProtocol } from './setup-protocol';
import { getId } from './state';
import { setupQuitHandling } from './quit-handling';
import { setupUpdates } from './setup-updates';

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  // eslint-disable-line global-require
  app.quit();
}

let mainWindow: BrowserWindow | null = null;
let windowWidth: number = 0;

const createWindow = (windowWidth: number): void => {
  // Create the browser window.
  mainWindow = new BrowserWindow({
    height: windowWidth * 1.5,
    width: windowWidth,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
    backgroundColor: '#2e2c29',
    titleBarStyle: 'hidden',
    frame: false
  });

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Open the DevTools.
  // mainWindow.webContents.openDevTools();

  setupServer(mainWindow)

  const id = getId();
  if (id) {
    setIsInstalledAndRunning();
  }
};

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', () => {
  const display = screen.getPrimaryDisplay();
  const displayDimensions = display.workAreaSize;
  windowWidth = displayDimensions.width * 0.3;

  createWindow(windowWidth);
});


app.on('activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow(windowWidth);
  }
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.

setupProtocol(app, mainWindow);
setupUpdates();
setupQuitHandling(app);